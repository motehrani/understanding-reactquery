@use "sass:map";
@use "sass:list";

@function next-breakpoint($name) {
  $breakpoint-names: map.keys($breakpoints);
  $index: list.index($breakpoint-names, $name);

  @if not $index {
    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
  }

  @return if(
    $index < length($breakpoint-names),
    nth($breakpoint-names, $index + 1),
    null
  );
}

@function min-breakpoint($name) {
  $min: map.get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function max-breakpoint($name) {
  $max: map.get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@function translate-breakpoint-name($name) {
  $name: $name + '';

  @if $name == 'sm-phone' or $name == 0 or $name == 'xs' {
    @return 'xs';
  } @else if $name == 'phone' or $name == 576 or $name == 'sm' {
    @return 'sm';
  } @else if $name == 'lg-phone' or $name == 768 or $name == 'md' {
    @return 'md';
  } @else if $name == 'tablet' or $name == 992 or $name == 'lg' {
    @return 'lg';
  } @else if $name == 'desktop' or $name == 1200 or $name == 'xl' {
    @return 'xl';
  } @else if $name == 'lg-desktop' or $name == 1400 or $name == 'xxl' {
    @return 'xxl';
  } @else {
    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
  }
}

